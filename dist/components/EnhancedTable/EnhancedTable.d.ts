import * as React from 'react';
declare type FieldConfig<ItemType, Field extends keyof ItemType & string> = {
    field: Field;
    numeric?: boolean;
    disablePadding?: boolean;
    label?: string;
    disableSorting?: boolean;
    compareFunction?: ((a: ItemType, b: ItemType) => number);
    displayComponent?: React.ComponentType<{
        value: ItemType[Field];
    }>;
    editComponent?: React.ComponentType<{
        value: ItemType[Field];
        onRequestValueChange: (value: ItemType[Field]) => any;
    }>;
};
interface EnhancedTableProps<ItemType, IDType> {
    title: string;
    items: ItemType[];
    selection?: IDType[];
    onRequestSelectionChange?: (selection: IDType[]) => any;
    actions?: React.ReactFragment;
    onItemEdit?: (id: IDType, field: string, value: string) => any;
}
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string>(getID: (item: ItemType) => number, column0: FieldConfig<ItemType, F0>): React.ComponentType<EnhancedTableProps<ItemType, number>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string>(getID: (item: ItemType) => number, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>): React.ComponentType<EnhancedTableProps<ItemType, number>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string>(getID: (item: ItemType) => number, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>): React.ComponentType<EnhancedTableProps<ItemType, number>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string, F3 extends keyof ItemType & string>(getID: (item: ItemType) => number, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>, column3: FieldConfig<ItemType, F3>): React.ComponentType<EnhancedTableProps<ItemType, number>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string, F3 extends keyof ItemType & string, F4 extends keyof ItemType & string>(getID: (item: ItemType) => number, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>, column3: FieldConfig<ItemType, F3>, column4: FieldConfig<ItemType, F4>): React.ComponentType<EnhancedTableProps<ItemType, number>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string, F3 extends keyof ItemType & string, F4 extends keyof ItemType & string, F5 extends keyof ItemType & string>(getID: (item: ItemType) => number, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>, column3: FieldConfig<ItemType, F3>, column4: FieldConfig<ItemType, F4>, column5: FieldConfig<ItemType, F5>): React.ComponentType<EnhancedTableProps<ItemType, number>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string, F3 extends keyof ItemType & string, F4 extends keyof ItemType & string, F5 extends keyof ItemType & string, F6 extends keyof ItemType & string>(getID: (item: ItemType) => number, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>, column3: FieldConfig<ItemType, F3>, column4: FieldConfig<ItemType, F4>, column5: FieldConfig<ItemType, F5>, column6: FieldConfig<ItemType, F6>): React.ComponentType<EnhancedTableProps<ItemType, number>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string, F3 extends keyof ItemType & string, F4 extends keyof ItemType & string, F5 extends keyof ItemType & string, F6 extends keyof ItemType & string, F7 extends keyof ItemType & string>(getID: (item: ItemType) => number, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>, column3: FieldConfig<ItemType, F3>, column4: FieldConfig<ItemType, F4>, column5: FieldConfig<ItemType, F5>, column6: FieldConfig<ItemType, F6>, column7: FieldConfig<ItemType, F7>): React.ComponentType<EnhancedTableProps<ItemType, number>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string>(getID: (item: ItemType) => string, column0: FieldConfig<ItemType, F0>): React.ComponentType<EnhancedTableProps<ItemType, string>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string>(getID: (item: ItemType) => string, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>): React.ComponentType<EnhancedTableProps<ItemType, string>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string>(getID: (item: ItemType) => string, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>): React.ComponentType<EnhancedTableProps<ItemType, string>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string, F3 extends keyof ItemType & string>(getID: (item: ItemType) => string, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>, column3: FieldConfig<ItemType, F3>): React.ComponentType<EnhancedTableProps<ItemType, string>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string, F3 extends keyof ItemType & string, F4 extends keyof ItemType & string>(getID: (item: ItemType) => string, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>, column3: FieldConfig<ItemType, F3>, column4: FieldConfig<ItemType, F4>): React.ComponentType<EnhancedTableProps<ItemType, string>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string, F3 extends keyof ItemType & string, F4 extends keyof ItemType & string, F5 extends keyof ItemType & string>(getID: (item: ItemType) => string, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>, column3: FieldConfig<ItemType, F3>, column4: FieldConfig<ItemType, F4>, column5: FieldConfig<ItemType, F5>): React.ComponentType<EnhancedTableProps<ItemType, string>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string, F3 extends keyof ItemType & string, F4 extends keyof ItemType & string, F5 extends keyof ItemType & string, F6 extends keyof ItemType & string>(getID: (item: ItemType) => string, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>, column3: FieldConfig<ItemType, F3>, column4: FieldConfig<ItemType, F4>, column5: FieldConfig<ItemType, F5>, column6: FieldConfig<ItemType, F6>): React.ComponentType<EnhancedTableProps<ItemType, string>>;
export default function createEnhancedTableComponent<ItemType, F0 extends keyof ItemType & string, F1 extends keyof ItemType & string, F2 extends keyof ItemType & string, F3 extends keyof ItemType & string, F4 extends keyof ItemType & string, F5 extends keyof ItemType & string, F6 extends keyof ItemType & string, F7 extends keyof ItemType & string>(getID: (item: ItemType) => string, column0: FieldConfig<ItemType, F0>, column1: FieldConfig<ItemType, F1>, column2: FieldConfig<ItemType, F2>, column3: FieldConfig<ItemType, F3>, column4: FieldConfig<ItemType, F4>, column5: FieldConfig<ItemType, F5>, column6: FieldConfig<ItemType, F6>, column7: FieldConfig<ItemType, F7>): React.ComponentType<EnhancedTableProps<ItemType, string>>;
export {};
